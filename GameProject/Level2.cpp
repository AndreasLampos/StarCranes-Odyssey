#include "level.h"
#include "level2.h"
#include "gamestate.h"
#include "gameobject.h"

void Level2::update(float dt)
{

	if (Level::m_state->getPlayer()->isActive())
		Level::m_state->getPlayer()->update(dt);

	for (int i = 0; i < enemies2.size(); i++)
	{
		if (enemies2[i]->isActive()) {
			enemies2[i]->update(dt);
		}
	}

	checkCollisionPlayerSpike();
	checkCollisionPlayerKey();
	checkCollisionPlayerDoor();
	checkCollisionsForEnemy(m_blocks2, enemies2);
	checkCollisions(m_blocks2);
	checkCollisionPlayerSaw(saws2);
	checkCollisionPlayerStar(stars2);
	checkCollisionsMovingObjects(enemies2);
	GameObject::update(dt);
}

void Level2::draw()
{
	float w = Level::m_state->getCanvasWidth();
	float h = Level::m_state->getCanvasHeight();

	float offset_x = Level::m_state->m_global_offset_x;
	float offset_y = Level::m_state->m_global_offset_y;

	//draw background
	graphics::drawRect(offset_x, offset_y + 2.0f, 6.0f * w, 3.0f * h, m_brush_background);

	// draw static blocks
	for (int i = 0; i < m_blocks2.size(); i++)
	{
		drawBlock(i, m_blocks2);
	}

	// draw non collidable blocks
	for (int i = 0; i < m_non_collidable_blocks2.size(); i++)
	{
		drawNonCollisionBlock(i, m_non_collidable_blocks2);
	}

	for (int i = 0; i < saws2.size(); i++)
	{
		if (saws2[i]->isActive()) {
			saws2[i]->draw(0.5f);
		}
	}

	// draw stars
	for (int i = 0; i < stars2.size(); i++) {
		if (stars2[i]->isActive()) {
			stars2[i]->draw(0.2f);
		}
	}

	for (int i = 0; i < spikes2.size(); i++) {
		if (spikes2[i]->isActive()) {
			spikes2[i]->draw(0.0f);
		}
	}

	mn_leveldoor2->draw(0.5f);

	if (m_keylevel2 != nullptr) {
		mn_keylevel2->draw(0.5f);
	}

	for (int i = 0; i < enemies2.size(); i++)
	{
		if (enemies2[i]->isActive())
			enemies2[i]->draw();
	}

	// draw player
	if (Level::m_state->getPlayer()->isActive())
		Level::m_state->getPlayer()->draw();
}

void Level2::init()
{

	const char* lvl2[20][74]{
	{ "10", "04", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05",  "05", "05",  "05",  "05",  "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "05", "06"},
	{ "01", "13", "03", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",   "0",  "0",   "0",   "0",   "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "03", "03", "03", "03", "03", "03", "03", "03", "15"},
	{ "01", "13", "03", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "110",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "110",  "0",  "0",  "0",  "0",  "0",   "0",  "77",   "78",   "79",   "78",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "64", "03", "03", "03", "55", "56", "57", "10", "15"},
	{ "01", "13", "03", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "04",  "05",  "05",  "0",  "0",  "0",  "58",  "59",  "59",  "59",  "59",  "59",  "60",  "60",  "0",  "0",  "0",  "55",  "56",  "57",  "0",  "0",  "0",  "0",  "0",   "0",  "0",   "0",   "0",   "0",  "0",  "101",  "71",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "65", "03", "03", "03", "55", "56", "57", "01", "15"},
	{ "01", "13", "03", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "04",  "05",  "05",  "05",  "05",  "17",  "0",  "0",  "0",  "0",  "0",  "69",  "69",  "69",  "69",  "69",  "69",  "68",  "68",  "0",  "0",  "0",  "55",  "56",  "57",  "64",  "64",  "0",  "0",  "0",   "0",  "0",   "0",   "0",   "0",  "0",  "101",  "71",  "0",  "0",  "101",  "37",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "65", "73", "64", "64", "34", "50", "35", "01", "15"},
	{ "01", "13", "03", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "04",  "17",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "68",  "68",  "0",  "0",  "0",  "0",  "0",  "0",  "65",  "65",  "0",  "0",  "0",   "0",  "0",   "0",   "0",   "0",  "0",  "0",  "0",  "0",  "0",  "101",  "37",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "65", "73", "65", "65", "42", "69", "40", "19", "15"},
	{ "01", "13", "14", "0",  "0",  "0",  "0",  "0",  "16",  "05",  "05",  "05",  "05",  "17",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "68",  "68",  "0",  "0",  "0",  "0",  "0",  "0",  "65",  "65",  "54",  "54",  "0",   "0",  "0",   "0",   "0",   "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "66", "73", "66", "66", "42", "69", "40", "19", "15"},
	{ "01", "13", "14", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "68",  "68",  "0",  "0",  "0",  "0",  "0",  "0",  "66",  "66",  "63",  "63",  "0",   "54",  "0",   "0",   "0",   "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "41", "41", "73", "66", "43", "32", "44", "19", "15"},
	{ "01", "13", "14", "18", "31", "32", "32", "33", "0",  "41",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "25",  "0",  "0",  "0",  "68",  "68",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "54",  "63",  "0",   "54",  "18",   "0",   "0",   "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0", "0", "0", "27", "27", "27", "27", "27", "41", "41", "73", "66", "03", "03", "03", "01", "15"},
	{ "19", "13", "14", "45", "40", "68", "68", "42", "0",  "41",  "0",  "0",  "0",  "0",  "0",  "0",  "71",  "71",  "0",  "0",  "16",  "05",  "17",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "68",  "68",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "63",  "54",  "0",   "63",  "0",   "0",   "0",   "0",  "0",  "0",  "0",  "0",  "27", "27", "0",  "0",  "0",  "0",  "0",  "31", "32", "32", "33", "64", "04", "05", "05", "05", "05", "05", "06", "01", "15"},
	{ "01", "13", "03", "54", "40", "68", "68", "42", "0",  "0",  "0",  "55",  "56",  "57",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0", "0", "0", "0", "0",  "0",  "0",  "0",  "0", "77", "68", "68", "0", "0", "0",  "0",  "0",  "0",  "0",  "0",  "54", "63",  "0",   "54", "0",   "0",   "61",  "27", "18", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "42", "65", "13", "02", "03", "11", "12", "03", "15", "01", "15"},
	{ "01", "13", "03", "54", "40", "68", "68", "42", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0", "0", "0",  "0",  "0",  "0","111","111","111","0",  "0",  "69",  "69",  "0",  "0", "0", "0",  "0",  "0",  "0",  "0",  "63", "54",  "0",   "54", "0",   "0",   "61",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "42", "65", "22", "23", "23", "23", "23", "23", "24", "01", "15"},
	{ "19", "13", "26", "54", "49", "50", "50", "51", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "110", "0", "0", "0", "0", "58", "59", "59", "59", "59", "59", "59", "59", "60", "0", "0", "0", "0", "0",  "0",  "0",  "0",  "63", "54",  "0",   "54", "0",   "0",   "61",  "0",  "0",  "72", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "49", "50", "50", "51", "66", "55", "56", "56", "56", "56", "56", "57", "01", "15"},
	{ "01", "13", "03", "63", "36", "62", "47", "11", "0",  "0",  "0",  "0",  "0",  "0",  "04",  "05",  "05",  "05",  "05", "06", "0", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0", "0", "0", "0",  "0",  "0",  "63", "54",  "0",   "63", "0",   "0",   "61",  "0",  "0",  "0",  "0",  "72", "72", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "56",  "56",  "56",  "56",  "56",  "01", "15"},
	{ "19", "13", "03", "63", "36", "62", "47", "11", "0",  "0",  "0",  "0",  "0",  "04", "17",  "25",  "25",  "25",  "25",  "15",  "0",  "0",  "0",  "0",  "101",  "101","101",  "101","0",  "0",	"101",  "0",  "0",  "101",  "101",  "101",  "101",  "101",  "101",  "101",  "101",  "54", "63","101", "54", "101", "101", "70",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "72", "72", "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "56",  "56",  "56",  "56",  "56",  "01", "15"},
	{ "19", "13", "14", "55", "56", "57", "11", "11", "05", "05", "05", "05", "05", "17", "22", "23", "23", "23", "23", "24", "26", "11", "03", "14", "03", "14", "03", "14", "03", "03", "14", "03", "14", "03", "14", "14", "03", "03", "03", "14", "03", "14", "14", "14",  "54", "25",  "25",  "25",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "0",  "56",  "56",  "56",  "56",  "56",  "56",  "15"},
	{ "01", "13", "14", "55", "02", "57", "61", "71", "71", "71", "71", "71", "71", "71", "71", "71", "71", "71", "61", "34", "50", "35", "25", "25", "25", "21", "21", "41", "41", "73", "25", "73", "41", "41", "25", "73", "10", "73", "25", "41", "21", "25", "73", "73",  "54", "03",  "03",  "03",  "111","111","111","111","111","111","111","111","111","111","111","111","111","111","111","111","111","111","111","56",  "56",  "56",  "56",  "56",  "56",  "15"},
	{ "01", "13", "03", "55", "02", "57", "61", "21", "21", "21", "21", "21", "21", "21", "21", "21", "21", "21", "61", "42", "73", "40", "21", "41", "41", "25", "21", "41", "41", "25", "21", "25", "41", "41", "25", "25", "19", "73", "73", "41", "25", "73", "25", "21",  "63", "03",  "03",  "03",  "58", "59",  "59",  "59",  "59",  "59",  "59",  "59",  "59",  "59",  "59",  "59",   "59",  "59", "59","59", "59", "59",  "59",  "60",  "56",  "56",  "56",  "56",  "56",  "15"},
	{ "01", "13", "26", "55", "02", "57", "70", "48", "48", "48", "48", "48", "48", "48", "48", "48", "48", "48", "70", "43", "32", "44", "73", "41", "41", "21", "25", "25", "25", "48", "48", "48", "73", "73", "21", "73", "28", "25", "38", "29", "20", "29", "30", "25",  "63", "03",  "03",  "03",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "15"},
	{ "28", "22", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23",  "63", "03",  "03",  "03",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "56",  "24"}
	};

	const char* non_coll2[20][74]{
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "27", "0", "21", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "102", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "18", "0", "0", "0", "0", "0", "0", "0", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "18", "10", "11", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "102", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "21", "21", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "10", "11", "11", "11", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "33", "102", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "19", "20", "0", "0", "0", "6", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "22", "26", "24", "0", "23", "0", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "27", "29", "28", "0", "0", "5", "6", "31", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
	{ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
	};

	ArrayCheck(lvl2, non_coll2);

	m_block_brush.outline_opacity = 0.0f;
	m_block_brush_debug.fill_opacity = 0.1f;
	SETCOLOR(m_block_brush_debug.fill_color, 0.1f, 1.0f, 0.1f);
	SETCOLOR(m_block_brush_debug.outline_color, 0.3f, 1.0f, 0.2f);

	spitesinit();
}

void Level2::ArrayCheck(const char* lvl[20][74], const char* non_coll[20][74])
{
	int sawctr = 0;
	int enemyctr = 0;
	int spikesctr = 0;
	for (int x = 0; x < 20; x++) {
		for (int y = 0; y < 74; y++) {
			if (lvl[x][y] != "0") {
				switch (std::stoi(lvl[x][y])) {
				case 110:
					enemies2.push_back(new Enemy("Enemy" + std::to_string(enemyctr), y - 19, x - 2));
					enemies2[enemyctr]->init();
					enemyctr++;
					break;
				case 111:
					spikes2.push_back(new Spikes(y - 19, x - 2));
					spikes2[spikesctr]->init();
					spikesctr++;
					break;
				case 101:
					saws2.push_back(new saw(y - 19, x - 2));
					saws2[sawctr]->init();
					sawctr++;
					break;
				default:
					m_blocks2.push_back(CollisionObject(y - 19, x - 2, 1, 1));
					m_block_names2.push_back("IndustrialTile_" + std::string(lvl[x][y]) + ".png");
					break;
				}
			}
		}
	}

	int starctr = 0;
	for (int x = 0; x < 20; x++) {
		for (int y = 0; y < 74; y++) {
			if (non_coll[x][y] != "0") {
				switch (std::stoi(non_coll[x][y])) {
				case 102:
					stars2.push_back(new Star(y - 19, x - 2));
					stars2[starctr]->init();
					starctr++;
					break;
				default:
					m_non_collidable_blocks2.push_back(NonCollisionObject(y - 19, x - 2, 1, 1));
					m_non_collidable_block_names2.push_back("NonCollidableTile_" + std::string(non_coll[x][y]) + ".png");
					break;
				}
			}
		}
	}
}

Level2::Level2(const std::string& name)
	: GameObject(name)
{
	m_brush_background.outline_opacity = 0.0f;
	m_brush_background.texture = Level::m_state->getFullAssetPath("background2.png");
}